[build]
  publish = "."
  command = "echo 'No build step required'"

[build.environment]
  NODE_VERSION = "18"

# Security headers for Netlify
[[headers]]
  for = "/*"
  [headers.values]
    # Content Security Policy
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; connect-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests; block-all-mixed-content;"
    
    # Security headers
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=(), ambient-light-sensor=()"
    
    # HTTPS enforcement
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    
    # PWA headers
    Cross-Origin-Embedder-Policy = "require-corp"
    Cross-Origin-Opener-Policy = "same-origin"
    Cross-Origin-Resource-Policy = "same-origin"

# Cache control for static assets
[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.webmanifest"
  [headers.values]
    Cache-Control = "public, max-age=86400"
    Content-Type = "application/manifest+json"

# HTML files - shorter cache for updates
[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=3600"

# Service worker - no cache
[[headers]]
  for = "/service-worker.js"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Service-Worker-Allowed = "/"

# Redirects for SPA routing
[[redirects]]
  from = "/troop-swap"
  to = "/troop_swap_calculator.html"
  status = 301

[[redirects]]
  from = "/battle-results"
  to = "/battle_results.html"
  status = 301

[[redirects]]
  from = "/control-point"
  to = "/control_point.html"
  status = 301

[[redirects]]
  from = "/known-enemies"
  to = "/known_enemies.html"
  status = 301

# SPA fallback - all routes should serve index.html
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  conditions = {Role = ["admin"], Country = ["US"]}

# Basic auth for staging (optional)
# [context.deploy-preview]
#   command = "echo 'Deploy preview'"
#   [context.deploy-preview.environment]
#     NODE_ENV = "staging"

# [context.branch-deploy]
#   command = "echo 'Branch deploy'"
#   [context.branch-deploy.environment]
#     NODE_ENV = "development"
